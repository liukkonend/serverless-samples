# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

version: 0.2
phases:
  install:
    commands:
      # Install all dependencies (including dependencies for running tests)
      - cd ./javascript-http-sam
      - npm install
  pre_build:
    commands:
      # Discover and run unit tests in the '__tests__/unit' directory
      - npm run test:unit
      # Remove all unit tests to reduce the size of the package that will be ultimately uploaded to Lambda
      - rm -rf ./__tests__
      # Remove all dependencies not needed for the Lambda deployment package (the packages from devDependencies in package.json)
      - npm prune --production
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 662754177324.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=662754177324.dkr.ecr.us-east-1.amazonaws.com/locations-service-repository
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      # Use AWS SAM to package the application by using AWS CloudFormation
      - aws cloudformation package --template template.yaml --s3-bucket $BUILD_OUTPUT_BUCKET --output-template application.yaml
artifacts:
  type: zip
  discard-paths: yes
  files:
    -  ./javascript-http-sam/application.yaml
    - ./shared/cognito.yaml
    - ./shared/vpc.yaml
